// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/backend_service.proto

/*
Package isp is a generated protocol buffer package.

It is generated from these files:
	proto/backend_service.proto

It has these top-level messages:
*/
package isp

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import google_protobuf1 "github.com/golang/protobuf/ptypes/struct"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for BackendService service

type BackendServiceClient interface {
	// ===== SYSTEM =====
	Request(ctx context.Context, in *google_protobuf1.Struct, opts ...grpc.CallOption) (*google_protobuf1.Struct, error)
	Requests(ctx context.Context, in *google_protobuf1.Struct, opts ...grpc.CallOption) (*google_protobuf1.ListValue, error)
}

type backendServiceClient struct {
	cc *grpc.ClientConn
}

func NewBackendServiceClient(cc *grpc.ClientConn) BackendServiceClient {
	return &backendServiceClient{cc}
}

func (c *backendServiceClient) Request(ctx context.Context, in *google_protobuf1.Struct, opts ...grpc.CallOption) (*google_protobuf1.Struct, error) {
	out := new(google_protobuf1.Struct)
	err := grpc.Invoke(ctx, "/isp.BackendService/Request", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *backendServiceClient) Requests(ctx context.Context, in *google_protobuf1.Struct, opts ...grpc.CallOption) (*google_protobuf1.ListValue, error) {
	out := new(google_protobuf1.ListValue)
	err := grpc.Invoke(ctx, "/isp.BackendService/Requests", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for BackendService service

type BackendServiceServer interface {
	// ===== SYSTEM =====
	Request(context.Context, *google_protobuf1.Struct) (*google_protobuf1.Struct, error)
	Requests(context.Context, *google_protobuf1.Struct) (*google_protobuf1.ListValue, error)
}

func RegisterBackendServiceServer(s *grpc.Server, srv BackendServiceServer) {
	s.RegisterService(&_BackendService_serviceDesc, srv)
}

func _BackendService_Request_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf1.Struct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackendServiceServer).Request(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/isp.BackendService/Request",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackendServiceServer).Request(ctx, req.(*google_protobuf1.Struct))
	}
	return interceptor(ctx, in, info, handler)
}

func _BackendService_Requests_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf1.Struct)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackendServiceServer).Requests(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/isp.BackendService/Requests",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackendServiceServer).Requests(ctx, req.(*google_protobuf1.Struct))
	}
	return interceptor(ctx, in, info, handler)
}

var _BackendService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "isp.BackendService",
	HandlerType: (*BackendServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Request",
			Handler:    _BackendService_Request_Handler,
		},
		{
			MethodName: "Requests",
			Handler:    _BackendService_Requests_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/backend_service.proto",
}

func init() { proto.RegisterFile("proto/backend_service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 221 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2e, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x4f, 0x4a, 0x4c, 0xce, 0x4e, 0xcd, 0x4b, 0x89, 0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c,
	0x4e, 0xd5, 0x03, 0x8b, 0x0a, 0x31, 0xe7, 0x16, 0x17, 0x48, 0xc9, 0xa4, 0xe7, 0xe7, 0xa7, 0xe7,
	0xa4, 0xea, 0x27, 0x16, 0x64, 0xea, 0x27, 0xe6, 0xe5, 0xe5, 0x97, 0x24, 0x96, 0x64, 0xe6, 0xe7,
	0x15, 0x43, 0x94, 0xc0, 0x65, 0xc1, 0xbc, 0xa4, 0xd2, 0x34, 0xfd, 0xe2, 0x92, 0xa2, 0xd2, 0xe4,
	0x12, 0x88, 0xac, 0xd1, 0x46, 0x46, 0x2e, 0x3e, 0x27, 0x88, 0xd1, 0xc1, 0x10, 0x93, 0x85, 0x7c,
	0xb8, 0xd8, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0xc4, 0xf5, 0x20, 0x9a, 0xf5, 0x60,
	0x9a, 0xf5, 0x82, 0xc1, 0x9a, 0xa5, 0x70, 0x49, 0x28, 0xf1, 0x37, 0x5d, 0x7e, 0x32, 0x99, 0x89,
	0x53, 0x89, 0x05, 0xe4, 0x1a, 0x2b, 0x46, 0x2d, 0xa1, 0x40, 0x2e, 0x0e, 0xa8, 0x69, 0xc5, 0xb8,
	0x8d, 0x93, 0xc2, 0x90, 0xf0, 0xc9, 0x2c, 0x2e, 0x09, 0x4b, 0xcc, 0x29, 0x4d, 0x55, 0x12, 0x00,
	0x9b, 0xc8, 0xa5, 0xc4, 0x0a, 0x32, 0xd1, 0xc8, 0x8a, 0x51, 0xcb, 0x49, 0x9f, 0x4b, 0x2c, 0x33,
	0x5f, 0x2f, 0xbd, 0xa8, 0x20, 0x59, 0x2f, 0x39, 0x3f, 0xaf, 0x2c, 0xb5, 0xa8, 0x04, 0xea, 0x74,
	0x27, 0x61, 0x67, 0x14, 0x7e, 0x00, 0xc8, 0xb4, 0x00, 0xc6, 0x24, 0x36, 0xb0, 0xb1, 0xc6, 0x80,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x6e, 0xd5, 0xef, 0xea, 0x4b, 0x01, 0x00, 0x00,
}
